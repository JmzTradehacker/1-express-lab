<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My App</title>
    <link rel="stylesheet" href="/css/style.css"> <!-- Corrected CSS path -->
</head>
<body>
    <header>
        <h1>Welcome to My App</h1>
    </header>

    <nav>
        <a href="/about">Go to About Page</a>
        <a href="/">Go to Home Page</a>
    </nav>

    <img src="/GTAcarr1.jpg" alt="Image"> <!-- Corrected image path -->
    <a href="/download" download="GTAcarr1.jpg">Download Image</a>

    <form action="/submit" method="POST">
        <input type="text" name="data" placeholder="Enter something">
        <button type="submit">Submit</button>
    </form>

    <div id="submittedData"></div>

    <script>
        document.querySelector('form').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent the form from submitting normally
            
            const formData = new FormData(this);
            
            fetch('/submit', {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                alert('Form submitted successfully!');
                // Optionally, append the submitted data to a list or another part of the page
                document.querySelector('#submittedData').innerText = formData.get('data');
            })
            .catch(error => console.error('Error:', error));
        });

        function updateData(index) {
            const updatedData = prompt('Enter new data:');
            if (updatedData) {
                fetch(`/update/${index}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ updatedData })
                })
                .then(response => response.text())
                .then(data => {
                    alert(data);
                    location.reload(); // Reload the page to see the updated data
                });
            }
        }

        function deleteData(index) {
            if (confirm('Are you sure you want to delete this data?')) {
                fetch(`/delete/${index}`, {
                    method: 'DELETE'
                })
                .then(response => response.text())
                .then(data => {
                    alert(data);
                    location.reload(); // Reload the page to see the updated data
                });
            }
        }
    </script>
</body>
</html>
